theme(
axis.title = element_text(family = "Times New Roman", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50"),text=element_text(size=16,family="Times New Roman"),legend.key.size = unit(0.8, "cm"),
legend.text = element_text(
size = 16,
face = 'bold'
),
legend.title = element_blank(),)+
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
mt_t2<-mt_t + theme(legend.position = "none")
ggsave("mt_t011222.png",width=6, height=4)
mt_e<-ggplot(data = mtEPlot, aes(x=trial, y=meanE, color = Subgroup))+
geom_line(size=1.5) +geom_point(size=2)  +
scale_color_manual(values=c('#00BDD0','#E7861B'))+
geom_errorbar(aes(ymin=meanE-se,ymax=meanE+se),
width=.2,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Times New Roman", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Number of Errors") +
theme(panel.background = element_rect(fill = "white", colour = "grey50"),text=element_text(size=16,family="Times New Roman"),legend.key.size = unit(0.8, "cm"),
legend.text = element_text(
size = 16,
face = 'bold'
),
legend.title = element_blank(),)+
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
mt_e2<-mt_e + theme(legend.position = "none")
ggsave("mt_e011222.png",width=6, height=4)
mt3<-na.omit(mt2)
d_glm_fit_list <- vector(mode = "list", length = nrow(mt)*2)
index <- 0
abcd_ids=unique(mt3$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_ids) {
# print(subj)
d_subj <- filter(mt3, PartID==subj)
subj_model <- lm(error ~ trial, #errors
data = d_subj)
b_list5[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_glm_fit_list <- vector(mode = "list", length = nrow(mt)*2)
index <- 0
abcd_ids=unique(mt3$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) {
print(subj)
d_subj <- filter(mt3, PartID==subj)
subj_model <- lm(time ~ trial, #errors
data = d_subj)
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
#new data frame containing the mirror slopes
mt_data <- data.frame(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data$slope_me<-as.numeric(mt_data$slope_me)
hist(mt_data$slope_mt)
#mt_data<-mt_data%>%filter(mt_data$slope_mt<0) #filter out postitive slopes (n=2)
mt_data<-mt_data%>%filter(mt_data$slope_mt>-300) #filter out postitive slopes (n=2)
#mt_data$slope_mt<-abs(mt_data$slope_mt)
#mt_data$slope_me<-abs(mt_data$slope_me)
d_3 <- d %>%
dplyr::select("PartID","Subgroup", "Age","Sex")
d_mt <- left_join(mt_data, d_3, by = "PartID")
d2<-merge(d_rp,d_mt,all = TRUE)
names(SL)[names(SL) == "subj"] <- "PartID"
d_all<-merge(d,rp_data,all = TRUE)
d_all <-merge(d_all,mt_data,all=TRUE)
d_all <-merge(d_all,SL,all=TRUE)
table(SL$group)
subj_table_vsl<-read.csv("sl_analysis/vsl_rt_subj_table.csv")
fam_trial_vsl<-read.csv("sl_analysis/vsl_rt_trial.csv")
fam_trial_vsl_scale<-read.csv("sl_analysis/vsl_rt_scale_trial.csv")
subj_table_tsl<-read.csv("sl_analysis/tsl_rt_subj_table.csv")
fam_trial_tsl<-read.csv("sl_analysis/tsl_rt_trial.csv")
fam_trial_tsl_scale<-read.csv("sl_analysis/tsl_rt_scale_trial.csv")
#need to rename from Subj  to PartID
names(subj_table_vsl)[names(subj_table_vsl)=="subj"] <- "PartID"
names(fam_trial_vsl)[names(fam_trial_vsl)=="subj"] <- "PartID"
names(fam_trial_vsl_scale)[names(fam_trial_vsl_scale)=="subj"] <- "PartID"
names(subj_table_tsl)[names(subj_table_tsl)=="subj"] <- "PartID"
names(fam_trial_tsl)[names(fam_trial_tsl)=="subj"] <- "PartID"
names(fam_trial_tsl_scale)[names(fam_trial_tsl_scale)=="subj"] <- "PartID"
data<-as_tibble(subj_table_tsl)
data %>%
group_by(Subgroup) %>%
dplyr::summarise(
count = n(),
rt = qwraps2::mean_sd(mean_rt),
slope = qwraps2::mean_sd(rt_slope),
d_prime = qwraps2::mean_sd(dprime),
hits = qwraps2::mean_sd(hit_rate)
)
usable_tsl_rt<-subj_table_tsl[subj_table_tsl$hit_rate>0,]$PartID
subj_table_tsl_usable <-subset(subj_table_tsl,PartID %in% usable_tsl_rt)
data<-as_tibble(subj_table_tsl_usable)
data %>%
group_by(Subgroup) %>%
dplyr::summarise(
count = n(),
rt = qwraps2::mean_sd(mean_rt),
slope = qwraps2::mean_sd(rt_slope),
d_prime = qwraps2::mean_sd(dprime),
hits = qwraps2::mean_sd(hit_rate)
)
fam_trial_tsl_usable <-subset(fam_trial_tsl,PartID %in% usable_tsl_rt)
fam_trial_tsl_usable_s <-subset(fam_trial_tsl_scale,PartID %in% usable_tsl_rt)
fam_tsl_age_gender_iq = merge(fam_trial_tsl_usable,d[,c(1,3,4,6)],all.x=TRUE)
fam_tsl_s_age_gender_iq = merge(fam_trial_tsl_usable_s,d[,c(1,3,4,6)],all.x=TRUE)
library(car)
fam_tsl_s_age_gender_iq$Subgroup = as.factor(fam_tsl_s_age_gender_iq$Subgroup)
contrasts(fam_tsl_s_age_gender_iq$Subgroup) <-contr.Sum(levels(fam_tsl_s_age_gender_iq$Subgroup))
model2_cov <- lmer(rt_col~Age+Sex+kbit_ss+reindex*Subgroup+(1+reindex|PartID),data=fam_tsl_age_gender_iq)
summary(model2_cov)
r2beta(model2_cov, method = "nsj")
tsl_rt_plot<-dplyr::summarise(group_by(fam_trial_tsl,Subgroup,reindex), n = n(),
mean=mean(rt_col,na.rm = T), sd=sd(rt_col,na.rm = T),se = sd/sqrt(n))
tsl_rt<-ggplot(data = tsl_rt_plot, aes(x=reindex, y=mean, col=Subgroup))+
geom_line(size=1.5) +geom_point(size=2)  +
scale_color_manual(values=c('#00BDD0','#E7861B'))+
geom_errorbar(aes(ymin=mean-se,ymax=mean+se),
width=.2,  size=0.5)+
scale_x_continuous(breaks=seq(4,48,4))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Response Time (ms)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
tsl_rt2<-tsl_rt + theme(legend.position = "none")
ggsave("tsl_rt011222.png",width=7, height=4)
asl_slope<-subj_table_tsl_usable%>%dplyr::select("PartID","Subgroup","rt_slope")
asl_slope<-na.omit(asl_slope)
asl_slope2 = asl_slope %>%
dplyr::group_by(PartID, Subgroup) %>%
dplyr::summarise(mean = mean(rt_slope, na.rm = T))
multi.group_asl <-
asl_slope2 %>%
dabestr::dabest(Subgroup,mean,
idx = list(c("TYP","DD")),
paired = FALSE
)
multi.group_asl_2 <- dabestr::cohens_d(multi.group_asl)
plot(multi.group_asl_2, palette=c("blue","red"),rawplot.ylabel = "ASL Time Slope")
data<-as_tibble(subj_table_vsl)
data %>%
group_by(Subgroup) %>%
dplyr::summarise(
count = n(),
rt = qwraps2::mean_sd(mean_rt),
slope = qwraps2::mean_sd(rt_slope),
d_prime = qwraps2::mean_sd(dprime),
hits = qwraps2::mean_sd(hit_rate)
)
subj_table_vsl_iq_age = merge(data,d[,c(1,3,4,6)],all.x=TRUE)
summary(lm(dprime~Age+Sex+kbit_ss+Subgroup,data=subj_table_vsl_iq_age))
fam_vsl_age_gender_iq = merge(fam_trial_vsl,d[,c(1,3,4,6)],all.x=TRUE)
fam_vsl_s_age_gender_iq = merge(fam_trial_vsl_scale,d[,c(1,3,4,6)],all.x=TRUE)
fam_vsl_s_age_gender_iq$Subgroup = as.factor(fam_vsl_s_age_gender_iq$Subgroup)
contrasts(fam_vsl_s_age_gender_iq$Subgroup) <-contr.Sum(levels(fam_vsl_s_age_gender_iq$Subgroup))
model2_cov <- lmer(rt_col~Age+Sex+kbit_ss+reindex*Subgroup+(1+reindex|PartID),data=fam_vsl_age_gender_iq)
summary(model2_cov)
r2beta(model2_cov, method = "nsj")
subj_table_vsl_gender_iq = merge(subj_table_vsl,d[,c(1,3,4,6)],all.x=TRUE)
vsl_rt_ancova=aov(rt_slope~Subgroup+Age+Sex+kbit_ss,data=subj_table_vsl_gender_iq)
summary(vsl_rt_ancova)
colnames(subj_table_tsl_usable)[1]="subj"
colnames(subj_table_vsl)[1]="subj"
subj_table_tsl_usable$task = "Auditory"
subj_table_vsl$task = "Visual"
all_subj_slope = rbind(subj_table_vsl,subj_table_tsl_usable)
fam_trial_vsl_scale$task="Visual"
fam_trial_tsl_usable_s$task="Auditory"
all_fam_trials = rbind(fam_trial_vsl_scale,fam_trial_tsl_usable_s)
all_subj_slope$tasknum=""
for (id in all_subj_slope$subj) {
all_subj_slope[all_subj_slope$subj==id,]$tasknum = nrow(all_subj_slope[all_subj_slope$subj==id,])
}
all_subj_slope_complete = subset(all_subj_slope,tasknum==2)
all_subj_slope_age_gender_iq = merge(all_subj_slope_complete,d[,c(1,3,4,6)],all.x=TRUE)
all_fam_trials_age_gender_iq = merge(all_fam_trials,d[,c(1,3,4,6)],all.x=TRUE)
all_fam_trials_age_gender_iq$task = as.factor(all_fam_trials_age_gender_iq$task)
all_fam_trials_age_gender_iq$Subgroup = as.factor(all_fam_trials_age_gender_iq$Subgroup)
contrasts(all_fam_trials_age_gender_iq$task) <-contr.Sum(levels(all_fam_trials_age_gender_iq$task))
contrasts(all_fam_trials_age_gender_iq$Subgroup) <-contr.Sum(levels(all_fam_trials_age_gender_iq$Subgroup))
model_rt_lmer_cov <- lmer(rt_col~Age+Sex+kbit_ss+task*reindex*Subgroup+(1+task|PartID)+(task|reindex),data=all_fam_trials_age_gender_iq)
print(summary(model_rt_lmer_cov))
typ_fam_trials_age_gender_iq = subset(all_fam_trials_age_gender_iq, Subgroup == "TYP")
model_rt_lmer_cov_typ <- lmer(rt_col~Age+Sex+kbit_ss+task*reindex+(1+task|PartID)+(task|reindex),data=typ_fam_trials_age_gender_iq)
print(summary(model_rt_lmer_cov_typ))
r2beta(model_rt_lmer_cov_typ, method = "nsj")
all_accuracy=read.csv("sl_analysis/all_sl_accuracy.csv")
all_acc_table=read.csv("sl_analysis/sl_acc_subj_table.csv")
vsl_acc_table=subset(all_acc_table,task=="Visual")
tsl_acc_table=subset(all_acc_table,task=="Auditory")
vsl_accuracy=subset(all_accuracy,task=="Visual")
tsl_accuracy=subset(all_accuracy,task=="Auditory")
data<-as_tibble(all_acc_table)
data %>%
group_by(Subgroup,task) %>%
dplyr::summarise(
count = n(),
accuracy = qwraps2::mean_sd(subj_corr)
)
DD_acc_vsl = subset(vsl_acc_table,Subgroup=="DD")
TYP_acc_vsl = subset(vsl_acc_table,Subgroup=="TYP")
DD_acc_tsl = subset(tsl_acc_table,Subgroup=="DD")
TYP_acc_tsl = subset(tsl_acc_table,Subgroup=="TYP")
t.test(DD_acc_vsl$subj_corr,mu=0.5,alternative = "greater")
t.test(DD_acc_tsl$subj_corr,mu=0.5,alternative = "greater")
t.test(TYP_acc_vsl$subj_corr,mu=0.5,alternative = "greater")
t.test(TYP_acc_tsl$subj_corr,mu=0.5,alternative = "greater")
vsl_accuracy = subset(all_accuracy,task=="Visual")
tsl_accuracy = subset(all_accuracy,task=="Auditory")
vsl_accuracy_age_gender_iq = merge(vsl_accuracy,d[,c(1,3,4,6)],by="PartID",all.x=TRUE)
tsl_accuracy_age_gender_iq = merge(tsl_accuracy,d[,c(1,3,4,6)],by="PartID",all.x=TRUE)
vsl_accuracy_age_gender_iq$Subgroup =as.factor(vsl_accuracy_age_gender_iq$Subgroup)
contrasts(vsl_accuracy_age_gender_iq$Subgroup) <-contr.Sum(levels(vsl_accuracy_age_gender_iq$Subgroup))
model_vslacc_lmer_cov <- glmmPQL(corr~Age+Sex+kbit_ss+Subgroup,random=~1|PartID/trial,data=vsl_accuracy_age_gender_iq,family="binomial")
all_acc_table_age_gender_iq = merge(all_acc_table,d[,c(1,3,4,6)],by="PartID",all.x=TRUE)
vsl_acc_table = subset(all_acc_table_age_gender_iq,task == "Visual")
asl_acc_table = subset(all_acc_table_age_gender_iq,task == "Auditory")
#vslacc_ancova <- aov(subj_corr~Age+Sex+IQ+Subgroup,data=vsl_acc_table)
#print(summary(vslacc_ancova))
tsl_accuracy_age_gender_iq$Subgroup =as.factor(tsl_accuracy_age_gender_iq$Subgroup)
contrasts(tsl_accuracy_age_gender_iq$Subgroup) <-contr.Sum(levels(tsl_accuracy_age_gender_iq$Subgroup))
model_tslacc_lmer_cov <- glmmPQL(corr~Age+Sex+kbit_ss+Subgroup,random=~1|PartID/trial,data=tsl_accuracy_age_gender_iq,family="binomial")
d_all$PA<-rowMeans(d_all[,c('Elision','Blending')])
d_all$WR<-rowMeans(d_all[,c('WID','WA')])
d_all_dys = subset(d_all,Subgroup == "DD")
d_all_typ = subset(d_all,Subgroup == "TYP")
task_data<-d_all%>%ungroup%>%dplyr::select(WR,PA,SWE,PDE,WID,WA, gort_rate_ss, gort_accuracy_ss, gort_fluency_ss, slopeProp_On,slope_mt,slope_me,aud_acc,vis_acc,aud_slope_scale,vis_slope_scale,IQ,Age)%>%dplyr::filter_at(vars(IQ), all_vars(!is.na(.)))
task_data$gort_rate_ss=as.numeric(as.character(task_data$gort_rate_ss))
task_data$gort_accuracy_ss=as.numeric(as.character(task_data$gort_accuracy_ss))
task_data$gort_fluency_ss=as.numeric(as.character(task_data$gort_fluency_ss))
task_data_dys<-d_all_dys%>%ungroup%>%dplyr::select(WR,PA,SWE,PDE,WID,WA, gort_rate_ss, gort_accuracy_ss, gort_fluency_ss, slopeProp_On,slope_mt,slope_me,aud_acc,vis_acc,aud_slope_scale,vis_slope_scale,IQ,Age)%>%dplyr::filter_at(vars(IQ), all_vars(!is.na(.)))
task_data_dys$gort_rate_ss=as.numeric(as.character(task_data_dys$gort_rate_ss))
task_data_dys$gort_accuracy_ss=as.numeric(as.character(task_data_dys$gort_accuracy_ss))
task_data_dys$gort_fluency_ss=as.numeric(as.character(task_data_dys$gort_fluency_ss))
task_data_typ<-d_all_typ%>%ungroup%>%dplyr::select(WR,PA,SWE,PDE,WID,WA, gort_rate_ss, gort_accuracy_ss, gort_fluency_ss, slopeProp_On,slope_mt,slope_me,aud_acc,vis_acc,aud_slope_scale,vis_slope_scale,IQ,Age)%>%dplyr::filter_at(vars(IQ), all_vars(!is.na(.)))
task_data_typ$gort_rate_ss=as.numeric(as.character(task_data_typ$gort_rate_ss))
task_data_typ$gort_accuracy_ss=as.numeric(as.character(task_data_typ$gort_accuracy_ss))
task_data_typ$gort_fluency_ss=as.numeric(as.character(task_data_typ$gort_fluency_ss))
corstars(task_data,method="pearson")#you need to run the function first
head(task_data)
names(task_data)
names(d_all)
head(rp2_age_gender_iq)
head(d_rp)
names(d_rp)
rp_data <- rp2_age_gender_iq %>% select(PartID,prop_on)
d_rp<-merge(d,rp_data)
d_rp <- rp2_age_gender_iq %>% select(PartID,prop_on)
head(d_3)
head(mt_data)
head(mt2)
d_mt <- mt2%>%select(PartID, time, error) %>%group_by(PartID) %>% summarise(sum_time = sum(time),sum,_err = sum(errpr))%>%ungroup()
d_mt <- mt2%>%select(PartID, time, error) %>%group_by(PartID) %>% summarise(sum_time = sum(time),sum_err = sum(error))%>%ungroup()
d_mt <- mt2%>%select(PartID, time, error) %>%
group_by(PartID) %>%
dplyr::summarise(sum_time = sum(time),sum_err = sum(error))%>%ungroup()
View(d_mt)
d2<-merge(d_rp,d_mt,all = TRUE)
View(d2)
d_mt <- mt2%>%select(PartID, time, error) %>%
group_by(PartID) %>%
dplyr::summarise(mt_sum_time = sum(time),mt_sum_err = sum(error))%>%ungroup()
d2<-merge(d_rp,d_mt,all = TRUE)
colnames(d_rp$prop_on) <- "rp_prop_on"
names(d_rp)
colnames(d_rp[2]) <- "rp_prop_on"
d_mt <- mt2%>%select(PartID, time, error) %>%
group_by(PartID) %>%
dplyr::summarise(mt_sum_time = sum(time),mt_sum_err = sum(error))%>%ungroup()
d2<-merge(d_rp,d_mt,all = TRUE)
names(d2)
View(d_rp)
d_rp <- rp2_age_gender_iq %>% select(PartID,prop_on)
colnames(d_rp[2]) <- "rp_prop_on"
d2<-merge(d_rp,d_mt,all = TRUE)
names(d2)
names(d_rp)
d_rp <- rp2_age_gender_iq %>% select(PartID,prop_on)
colnames(d_rp[2]) <- "rp_prop_on"
names(d_rp)
colnames(d_rp[2]) ="rp_prop_on"
names(d_rp)
#Create a new Data Frame containing the slopes
d_rp <- rp2_age_gender_iq %>% dplyr::select(PartID,prop_on)
colnames(d_rp[2]) ="rp_prop_on"
names(d_rp)
d_rp[2]
names(d_rp[2]) ="rp_prop_on"
d_rp[2]
d_rp[2]
names(d_rp)
names(d_rp)[2] <-"rp_prop_on"
names(d_rp)
d_mt <- mt2%>%select(PartID, time, error) %>%
group_by(PartID) %>%
dplyr::summarise(mt_sum_time = sum(time),mt_sum_err = sum(error))%>%ungroup()
d2<-merge(d_rp,d_mt,all = TRUE)
d_pl<-merge(d_rp,d_mt,all = TRUE)
#d_all<-merge(d,rp_data,all = TRUE)
d_all <-merge(d,d_pl,all=TRUE)
d_all <-merge(d_pl,SL,all=TRUE)
d_all <-merge(d,d_pl,all=TRUE)
d_all <-merge(d_all,SL,all=TRUE)
names(d_all)
d_all$PA<-rowMeans(d_all[,c('Elision','Blending')])
d_all$WR<-rowMeans(d_all[,c('WID','WA')])
d_all_dys = subset(d_all,Subgroup == "DD")
d_all_typ = subset(d_all,Subgroup == "TYP")
task_data<-d_all%>%ungroup%>%dplyr::select(WR,PA, rp_prop_on,mt_sum_time,mt_sum_err,aud_acc,vis_acc,aud_slope_scale,vis_slope_scale,IQ,Age)%>%dplyr::filter_at(vars(IQ), all_vars(!is.na(.)))
task_data_dys<-d_all_dys%>%ungroup%>%dplyr::select(WR,PA, rp_prop_on,mt_sum_time,mt_sum_err,aud_acc,vis_acc,aud_slope_scale,vis_slope_scale,IQ,Age)%>%dplyr::filter_at(vars(IQ), all_vars(!is.na(.)))
task_data_typ<-d_all_typ%>%ungroup%>%dplyr::select(WR,PA, rp_prop_on,mt_sum_time,mt_sum_err,aud_acc,vis_acc,aud_slope_scale,vis_slope_scale,IQ,Age)%>%dplyr::filter_at(vars(IQ), all_vars(!is.na(.)))
corstars(task_data,method="pearson")#you need to run the function first
write.csv(task_data,'pl_data_042423.csv')
write.csv(task_data_dys,'pl_data_DYS_042423.csv')
write.csv(task_data_typ,'pl_data_TYP_042423.csv')
head(SL)
names(SL)[names(SL) == "subj"] <- "PartID"
d_all <-merge(d,d_pl,all=TRUE)
d_all <-merge(d_all,SL,by="PartID")
View(d_pl)
d_rp <- rp2_age_gender_iq %>% dplyr::select(PartID,prop_on) %>% group_by(PartID) %>%
dplyr::summarise(rp_prop_on = mean(prop_on))
View(d_rp)
d_pl<-merge(d_rp,d_mt,all = TRUE)
names(SL)[names(SL) == "subj"] <- "PartID"
d_all <-merge(d,d_pl,by="PartID")
d_all <-merge(d_all,SL,by="PartID")
table(SL$group)
d_all$PA<-rowMeans(d_all[,c('Elision','Blending')])
d_all$WR<-rowMeans(d_all[,c('WID','WA')])
d_all_dys = subset(d_all,Subgroup == "DD")
d_all_typ = subset(d_all,Subgroup == "TYP")
task_data<-d_all%>%ungroup%>%dplyr::select(WR,PA, rp_prop_on,mt_sum_time,mt_sum_err,aud_acc,vis_acc,aud_slope_scale,vis_slope_scale,IQ,Age)%>%dplyr::filter_at(vars(IQ), all_vars(!is.na(.)))
#write.csv(task_data,'pl_data_042423.csv')
task_data_dys<-d_all_dys%>%ungroup%>%dplyr::select(WR,PA, rp_prop_on,mt_sum_time,mt_sum_err,aud_acc,vis_acc,aud_slope_scale,vis_slope_scale,IQ,Age)%>%dplyr::filter_at(vars(IQ), all_vars(!is.na(.)))
task_data_typ<-d_all_typ%>%ungroup%>%dplyr::select(WR,PA, rp_prop_on,mt_sum_time,mt_sum_err,aud_acc,vis_acc,aud_slope_scale,vis_slope_scale,IQ,Age)%>%dplyr::filter_at(vars(IQ), all_vars(!is.na(.)))
corstars(task_data,method="pearson")#you need to run the function first
write.csv(task_data,'pl_data_042423.csv')
write.csv(task_data_dys,'pl_data_DYS_042423.csv')
write.csv(task_data_typ,'pl_data_TYP_042423.csv')
View(d_pl)
arhq<-read.csv("RD_history.csv")
arhq<-read.csv("RD_history.csv")
View(d_all)
arhq_d<-merge(d_all,arhq)
names(arhq)
arhq_d<-merge(d_all,arhq,by="PartID")
View(arhq_d)
View(adult_table)
View(d)
arhq_d<-merge(d,arhq,by="PartID")
View(arhq_d)
View(d_all)
arhq<-read.csv("RD_history.csv")
arhq_d<-merge(d,arhq,by="PartID")
table(arhq_d$subgroup)
table(d$subgroup)
local({
.Table <- xtabs(~Subgroup, data=d)
cat("\nFrequency table:\n")
print(.Table)
})
table(d$Subgroup)
arhq_d<-merge(d,arhq,by="PartID")
table(arhq_d$Subgroup)
arhq<-read.csv("RD_history.csv")
arhq_d<-merge(d,arhq,by="PartID")
table(arhq_d$Subgroup)
View(arhq_d)
View(arhq)
View(arhq)
arhq<-read.csv("RD_history.csv")
table(arhq$Subgroup)
arhq_d<-merge(d,arhq,by="PartID")
table(arhq$Subgroup)
table(arhq_d$Subgroup)
str(arhq_d)
str(arhq_d$PartID)
str(d$PartID)
str(arhq$PartID)
arhq_d<-merge(d,arhq,by="PartID",all=TRUE)
table(arhq_d$Subgroup)
str(arhq_d$Subgroup)
View(arhq_d)
View(d)
arhq<-read.csv("RD_history.csv")
arhq_d<-merge(d,arhq,by="PartID",all=TRUE)
table(arhq_d$Subgroup)
View(arhq)
View(arhq_d)
arhq<-read.csv("RD_history.csv")
arhq_d<-merge(arhq,d,by="PartID",all=TRUE)
table(arhq_d$Subgroup)
names(arhq_d)
table(arhq_d$Subgroup.y)
table(arhq_d$Subgroup.x)
arhq<-read.csv("RD_history.csv")
arhq_d<-merge(arhq,d,by="PartID")
table(arhq_d$Subgroup.x)
table(arhq_d$Subgroup.y)
arhq<-read.csv("RD_history.csv")
arhq_d<-merge(arhq,d,by="PartID",all=TRUE)
table(arhq_d$Subgroup.x)
arhq_d_dd<-filter(Subgroup.x=='Dyslexic')
arhq<-read.csv("RD_history.csv")
arhq_d<-merge(arhq,d,by="PartID",all=TRUE)
table(arhq_d$Subgroup.x)
arhq_d_dd<-filter(Subgroup.x=='Dyslexic')
arhq_d_dd<-arhq_d%>%filter(Subgroup.x=='Dyslexic')
View(arhq_d_dd)
View(arhq_d_dd)
View(arhq_d_dd)
names(arhq_d_dd)
arhq_d_dd2<-arhq_d_dd%>%filter(X11a..Did.you.ever.experience.any.delays.or.difficulties.in.reading.development.=='No')
View(arhq_d_dd2)
arhq_d_dd2<-arhq_d_dd%>%filter(PartID=='1714' |PartID=='1782')
arhq_d_dd2<-arhq_d_dd%>%filter(PartID=='1714' ||PartID=='1782')
arhq_d_dd2<-arhq_d_dd%>%filter(PartID=='ABCD_1714' ||PartID=='ABCD_1782')
arhq_d_dd2<-arhq_d_dd%>%filter(PartID=='ABCD_1714' |PartID=='ABCD_1782')
View(arhq_d_dd2)
adult_table<-arhq_d_dd2%>%ungroup%>%dplyr::select(Subgroup,Sex,Age,IQ,WID,WA,SWE,PDE,
summary(tableby(data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
View(adult_table)
adult_table<-arhq_d_dd2%>%ungroup%>%dplyr::select(IQ,WID,WA,SWE,PDE)
summary(tableby(data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
summary(table(data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
adult_table<-arhq_d_dd2%>%ungroup%>%dplyr::select(Subgroup.x,Sex,Age,IQ,WID,WA,SWE,PDE,
summary(tableby(Subgroup ~ ., data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
adult_table<-arhq_d_dd2%>%ungroup%>%dplyr::select(Subgroup.x,Sex,Age,IQ,WID,WA,SWE,PDE)
adult_table<-arhq_d_dd2%>%ungroup%>%dplyr::select(Subgroup.x,Sex,Age,IQ,WID,WA,SWE,PDE)
summary(tableby(Subgroup ~ ., data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
summary(tableby(Subgroup.x ~ ., data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
adult_table<-arhq_d_dd2%>%ungroup%>%dplyr::select(Subgroup.x,Sex,Age,IQ,WID,WA,SWE,PDE,gort_accuracy_ss_2)
summary(tableby(Subgroup.x ~ ., data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
```
summary(tableby(Subgroup.x ~ ., data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
adult_table<-arhq_d_dd2%>%ungroup%>%dplyr::select(Subgroup.x,Sex,Age,IQ,WID,WA,SWE,PDE,gort_accuracy_ss_2,IQ)
summary(tableby(Subgroup.x ~ ., data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
d$ctopp_elision_ss
adult_table<-arhq_d_dd2%>%ungroup%>%dplyr::select(Subgroup.x,Sex,Age,IQ,WID,WA,SWE,PDE,ctopp_blending_ssctop,IQ,ctopp_elision_ss,DigitsSpan)
names(arhq_d_dd2)
adult_table<-arhq_d_dd2%>%ungroup%>%dplyr::select(Subgroup.x,Sex,Age,IQ,WID,WA,SWE,PDE,Vocabulary,
Blending,Nonword,IQ,Elision,DigitsSpan)
summary(tableby(Subgroup.x ~ ., data = adult_table,
control=tableby.control(numeric.stats="meansd", total=FALSE)),title = " Descriptives",text=TRUE,digits=2, digits.p=3)
names(arhq_d)
x<-table(arhq_d$X10..How.much.reading.do.you.do.for.pleasure.,arhq_d$Subgroup.x)
chisq <- chisq.test(x)
chisq
x
arhq_d<-merge(arhq,d,by="PartID",all=TRUE)
table(arhq_d$Subgroup.y)
names(arhq_d)
x<-table(arhq_d$X10..How.much.reading.do.you.do.for.pleasure.,arhq_d$Subgroup.x)
chisq <- chisq.test(x)
chisq
chisq
x
x<-table(arhq_d$X10..How.much.reading.do.you.do.for.pleasure.,arhq_d$Subgroup.y)
chisq <- chisq.test(x)
chisq
x
arhq<-read.csv("RD_history_all.csv")
arhq_d<-merge(arhq,d,by="PartID",all=TRUE)
arhq<-read.csv("RD_history_all.csv")
arhq_d<-merge(arhq,d,by="PartID",all=TRUE)
table(arhq_d$Subgroup.y)
names(arhq_d)
x<-table(arhq_d$X10..How.much.reading.do.you.do.for.pleasure.,arhq_d$Subgroup.y)
chisq <- chisq.test(x)
chisq
x
table(arhq_d$Subgroup.y)
x<-table(arhq_d$X10..How.much.reading.do.you.do.for.pleasure.,arhq_d$Subgroup.y)
x
chisq <- chisq.test(x)
chisq
x
arhq_d$X10..How.much.reading.do.you.do.for.pleasure.<-as.numeric(arhq_d$X10..How.much.reading.do.you.do.for.pleasure.)
anova(arhq_d$arhq_d$X10..How.much.reading.do.you.do.for.pleasure.~arhq_d$Subgroup.x)
aov(arhq_d$arhq_d$X10..How.much.reading.do.you.do.for.pleasure.~arhq_d$Subgroup.x)
anova(lm(arhq_d$arhq_d$X10..How.much.reading.do.you.do.for.pleasure.~arhq_d$Subgroup.x))
anova(lm(X10..How.much.reading.do.you.do.for.pleasure.~Subgroup.x, data=arhq_d$arhq_d))
anova(lm(X10..How.much.reading.do.you.do.for.pleasure.~Subgroup.x, data=arhq_d))
