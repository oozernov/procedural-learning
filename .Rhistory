width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
lm(error ~ poly(trial, 6, raw = TRUE), data = mt) %>%
summary()
lm(error ~ poly(trial, 6, raw = TRUE), data = mt) %>%
summary()
lm(error ~ poly(trial, 6, raw = TRUE), data = mt)
lm(prop_on ~ poly(trial, 6, raw = TRUE), data = rp2) %>%
summary()
ggplot(rp2, aes(trial, prop_on) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 3, raw = TRUE))
names(mt)
lm(error ~ poly(trial, 6, raw = TRUE), data = mt) %>%
summary()
hist(mt$error)
range(mt$error)
## Extract and organize
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,22] == ""){ #if null go to next line
next()
}
for(k in 22:31){
print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.factor(mt$trial)
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.factor(mt$trial)
summarize(mt)
summary(mt)
mt<-mt%>%filter(error<100)
summary(mt$error)
history(mt$error)
histogram(mt$error)
summary(mt)
## Extract and organize
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,22] == ""){ #if null go to next line
next()
}
for(k in 22:31){
print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.factor(mt$trial)
data_tmp4check <- aggregate(error ~ PartID * Subgroup, FUN=NROW, data = mt )
range(mt$trial)
range(as.interger(mt$trial))
range(as.numeric(mt$trial))
unique(data_tmp4check[data_tmp4check$trial != 10,])
View(data_tmp4check)
length(unique(d$PartID))
data_tmp4check[data_tmp4check$trial !=10,1]
histogram(mt$error)
histogram(mt$time)
unique(mt$time)
mt2<-mt%>%filter(time<200)
len(mt2)
length(unique(mt$PartID))
length(unique(mt2$PartID))
histogram(mt2$time)
histogram(mt2$error)
source('~/.active-rstudio-document', echo=TRUE)
m3<-lm(time~Subgroup*trial,
data=mt2)
anova(m3) #trial is only one sig
lm(error ~ poly(trial, 6, raw = TRUE), data = mt2) %>%
summary()
mt2<-na.omit(mt2)
lm(error ~ poly(trial, 6, raw = TRUE), data = mt2) %>%
summary()
mt2$error
mt2$trial
mt2$trial<-as.numeric(mt2$trial)
lm(error ~ poly(trial, 6, raw = TRUE), data = mt2) %>%
summary()
lm(error ~ poly(trial, 10, raw = TRUE), data = mt2) %>%
summary()
lm(error ~ poly(trial, 7, raw = TRUE), data = mt2) %>%
summary()
## Extract and organize
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,22] == ""){ #if null go to next line
next()
}
for(k in 22:31){
print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.numeric(mt$trial)
# Check # of trials per each subject
data_tmp4check <- aggregate(error ~ PartID * Subgroup, FUN=NROW, data = mt )
unique(data_tmp4check[data_tmp4check$trial != 10,])
View(data_tmp4check)
length(unique(d$PartID))
data_tmp4check[data_tmp4check$trial !=10,1]
# Outliers
##NOT SURE IF SHOULD EXCLUDE OR NOT
histogram(mt$error)
histogram(mt$time)
summary(mt)
mt2<-mt%>%filter(time<200) #excluded 2
length(unique(mt$PartID))
length(unique(mt2$PartID))
histogram(mt2$error)
histogram(mt2$time)
histogram(mt$error)
histogram(mt$time)
m3<-lm(time~Subgroup*as.factor(trial),
data=mt2)
anova(m3) #trial is only one sig
m4<-lm(error~Subgroup*as.factor(trial),
data=mt2)
anova(m4)
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time,na.rm = T), sd=sd(time,na.rm = T),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error,na.rm = T), sd=sd(error,na.rm = T),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = mtEPlot, aes(x=trial, y=meanE, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanE-se,ymax=meanE+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Errors") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
lm(error ~ poly(trial, 7, raw = TRUE), data = mt) %>%
summary()
lm(error ~ poly(trial, 5, raw = TRUE), data = mt) %>%
summary()
lm(error ~ poly(trial, 1, raw = TRUE), data = mt) %>%
summary()
lm(error ~ poly(trial, 2, raw = TRUE), data = mt) %>%
summary()
lm(error ~ poly(trial, 4, raw = TRUE), data = mt) %>%
summary()
mt$trial<-as.numeric(mt$trial)
hist(mt$error)
lm(time ~ poly(trial, 4, raw = TRUE), data = mt) %>%
summary() #chose 3
ggplot(mt, aes(trial, error) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 3, raw = TRUE))
mt2<-mt%>%filter(time<300) #excluded 2
m3<-lm(time~Subgroup*as.factor(trial),
data=mt2)
anova(m3) #trial+subgroup are significant
m4<-lm(error~Subgroup*as.factor(trial),
data=mt2)
anova(m4)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time,na.rm = T), sd=sd(time,na.rm = T),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error,na.rm = T), sd=sd(error,na.rm = T),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = mtEPlot, aes(x=trial, y=meanE, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanE-se,ymax=meanE+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Errors") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
lm(error ~ poly(trial, 4, raw = TRUE), data = mt2) %>%
summary() #chose 3
lm(error ~ poly(trial, 4, raw = TRUE), data = mt2) %>%
summary() #chose 3
lm(time ~ poly(trial, 4, raw = TRUE), data = mt2) %>%
summary() #chose 2
ggplot(mt, aes(trial, error) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 2, raw = TRUE))
ggplot(mt, aes(trial, time) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 2, raw = TRUE))
mt2<-mt%>%filter(time<200) #excluded 2
m3<-lm(time~Subgroup*as.factor(trial),
data=mt2)
anova(m3) #trial+subgroup are significant
m4<-lm(error~Subgroup*as.factor(trial),
data=mt2)
anova(m4)
```{r, echo=FALSE,warning = FALSE}
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time,na.rm = T), sd=sd(time,na.rm = T),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error,na.rm = T), sd=sd(error,na.rm = T),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = mtEPlot, aes(x=trial, y=meanE, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanE-se,ymax=meanE+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Errors") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
hist(mt$error)
lm(error ~ poly(trial, 4, raw = TRUE), data = mt2) %>%
summary() #chose 2
lm(time ~ poly(trial, 4, raw = TRUE), data = mt2) %>%
summary() #chose 2
ggplot(mt, aes(trial, error) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 2, raw = TRUE))
ggplot(mt2, aes(trial, error) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 2, raw = TRUE))
lm(error ~ poly(trial, 4, raw = TRUE), data = mt2) %>%
summary() #chose 2
lm(time ~ poly(trial, 4, raw = TRUE), data = mt2) %>%
summary() #chose 2
ggplot(mt2, aes(trial, time) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 3, raw = TRUE))
ggplot(mt2, aes(trial, time) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 2, raw = TRUE))
ggplot(mt2, aes(trial, error) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ x)
lm(error ~ poly(trial, 4, raw = TRUE), data = mt2) %>%
summary() #chose 2
ggplot(mt2, aes(trial, error) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 1, raw = TRUE))
stat_smooth(method = lm, formula = y ~ x)
ggplot(mt2, aes(trial, error) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ x)
lm(time ~ poly(trial, 4, raw = TRUE), data = mt2) %>%
summary() #chose 3
ggplot(mt2, aes(trial, time) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 3, raw = TRUE))
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_ids) { #d_export is my list of subject
# print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(error ~ trial, #errors
data = d_subj)
b_list5[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
b_list7=c()
m_list7 = c()
mt2<-na.omit(mt)
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt2$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
#print(subj)
d_subj <- dplyr::filter(mt2, PartID==subj)
subj_model <- lm(formula=time ~ poly(trial,4,raw=TRUE), #completion time
data = d_subj)
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
#new data frame containing the mirror slopes
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
mt_data$slope_me_t<-abs(as.numeric(mt_data$slope_me))
mt_data$slope_me_t<-log10(mt_data$slope_me_t) #transform slope
mt_data$slope_mt_t<-abs(as.numeric(mt_data$slope_mt))
mt_data$slope_mt_t<-log10(mt_data$slope_mt_t) #transform slope
d2<-merge(d, mt_data)
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
hist(mt_data$slope_me)
hist(as.numeric(mt_data$slope_me))
mt_data<-mt_data%>%filter(slope_me<51)
hist(as.numeric(mt_data$slope_me))
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
hist(as.numeric(mt_data$slope_me))
mt_data<-mt_data%>%filter(slope_me>51)
hist(as.numeric(mt_data$slope_me))
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
mt_data<-mt_data%>%filter(slope_me>-51)
hist(as.numeric(mt_data$slope_me))
```{r, echo=FALSE,warning = FALSE}
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_ids) { #d_export is my list of subject
# print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(error ~ trial, #errors
data = d_subj)
b_list5[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
b_list7=c()
m_list7 = c()
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt2$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
#print(subj)
d_subj <- dplyr::filter(mt2, PartID==subj)
subj_model <- lm(formula=time ~ poly(trial,4,raw=TRUE), #completion time
data = d_subj)
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
hist(as.numeric(mt_data$slope_me))
mt_data<-as.data.frame(mt_data)
hist(as.numeric(mt_data$slope_me))
hist(as.numeric(mt_data$slope_mt))
mt_data<-mt_data%>%filter(slope_mt>-400)
hist(as.numeric(mt_data$slope_mt))
mt_data<-mt_data%>%filter(slope_mt>-400)
hist(as.numeric(mt_data$slope_mt))
mt_data<-mt_data%>%filter(slope_mt>-400)
hist(mt_data$slope_mt)
hist(as.numeric(mt_data$slope_mt))
mt_data<-mt_data%>%filter(slope_mt>-200)
hist(as.numeric(mt_data$slope_mt))
mt_data2<-mt_data%>%dplyr::filter(slope_mt>-200)
hist(mt_data2$slope_mt)
hist(as.numeric(mt_data2$slope_mt))
mt_data2<-mt_data%>%dplyr::filter(as.numeric(slope_mt)>-200))
mt_data2<-mt_data%>%dplyr::filter(as.numeric(slope_mt))>-200)
mt_data$slope_me_t<-log10(mt_data$slope_me_t) #transform slope
mt_data$slope_me_t<-log10(as.numeric(mt_data$slope_me_t)) #transform slope
mt_data$slope_me<-abs(as.numeric(mt_data$slope_me))
hist(as.numeric(mt_data$slope_mt))
mt_data<-mt_data%>%filter(slope_mt>-400)
mt_data$slope_me<-log10(as.numeric(mt_data$slope_me)) #transform slope
histogram(as.numeric(mt_data$slope_mt))
mt_data$slope_me<-as.numeric(mt_data$slope_me)
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
mt_data$slope_me<-as.numeric(mt_data$slope_me)
mt_data<-mt_data%>%dplyr::filter(slope_mt>-400)
View(mt_data)
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
mt_data$slope_me<-as.numeric(mt_data$slope_me)
mt_data<-mt_data%>%dplyr::filter(slope_mt!=--525.29)
mt_data<-mt_data%>%dplyr::filter(slope_me!=--525.29)
View(mt_data)
mt_data$slope_me<-log10(as.numeric(mt_data$slope_me)) #transform slope
histogram(as.numeric(mt_data$slope_mt))
histogram(as.numeric(mt_data$slope_me))
mt_data$slope_me<-as.numeric(mt_data$slope_me)
mt_data<-mt_data%>%dplyr::filter(slope_me!=--525.29)
mt_data$slope_me<-log10(mt_data$slope_me) #transform slope
histogram(as.numeric(mt_data$slope_me))
histogram(mt_data$slope_me)
hist(mt_data$slope_me)
mt_data$slope_me<-log10(mt_data$slope_me) #transform slope
hist(mt_data$slope_me)
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
mt_data$slope_me<-as.numeric(mt_data$slope_me)
mt_data=mt_data%>%dplyr::filter(slope_me!=--525.29)
mt_data$slope_me<-log10(mt_data$slope_me) #transform slope
hist(mt_data$slope_me)
mt_data$slope_me
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
mt_data$slope_me<-as.numeric(mt_data$slope_me)
mt_data=mt_data%>%dplyr::filter(slope_me!=--525.29)
hist(mt_data$slope_me)
mt_data=mt_data%>%dplyr::filter(slope_me>-300)
hist(mt_data$slope_me)
mt_data$slope_me<-log(mt_data$slope_me) #transform slope
hist(mt_data$slope_me)
#new data frame containing the mirror slopes
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
mt_data$slope_me<-as.numeric(mt_data$slope_me)
mt_data=mt_data%>%dplyr::filter(slope_me>-300)
hist(mt_data$slope_me)
mt_data$slope_me<-log(abs(mt_data$slope_me)) #transform slope
hist(mt_data$slope_me)
d2<-merge(d, mt_data)
mt_data <- cbind(PartID=abcd_ids,slope_me = m_list5, slope_mt = m_list7)
mt_data<-as.data.frame(mt_data)
mt_data$slope_mt<-as.numeric(mt_data$slope_mt)
