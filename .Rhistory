print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
View(mt)
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,22] == ""){ #if null go to next line
next()
}
for(k in 22:31){
print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
View(mt)
mtABCD<-NULL
pl<-NULL
View(PL)
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.factor(mt$trial)
mt2<-na.omit(mt)
m3<-lme(time~Subgroup*trial,random=~1|PartID,
data=mt)
#import packages
Packages <- c("dplyr", "stats", "psych", "ggplot2", "lme4",
"gridExtra", "dplyr","caret","tidyverse", "ggplot2","plyr","lmerTest","ggpubr")
lapply(Packages, library, character.only = TRUE)
m3<-lme(time~Subgroup*trial,random=~1|PartID,
data=mt)
anova(m1)
m3<-lme(time~Subgroup*trial,random=~1|PartID,
data=mt)
??lme
lmer
m3<-lmer::lme(time~Subgroup*trial,random=~1|PartID,
data=mt)
m3<-lme4::lme(time~Subgroup*trial,random=~1|PartID,
data=mt)
library(nlme)
m3<-nlme::lme(time~Subgroup*trial,random=~1|PartID,
data=mt)
mt2<-na.omit(mt)
m3<-nlme::lme(time~Subgroup*trial,random=~1|PartID,
data=mt2)
anova(m3)
m4<-nlme::lme(error~Subgroup*trial,random=~1|PartID,
data=mt2)
anova(m4)
mtTPlot<-dplyr::summarise(group_by(mt,Subgroup,trial), n = n(),
time=mean(time), sd=sd(time),se = sd/sqrt(n))
View(mtTPlot)
mtTPlot<-dplyr::summarise(group_by(mt,Subgroup,trial), n = n(),
meanT=mean(time), sd=sd(time),se = sd/sqrt(n))
View(mtTPlot)
mt$time
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time), sd=sd(time),se = sd/sqrt(n))
View(mt2)
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error), sd=sd(error),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
geom_errorbar(aes(ymin=prop_on-se,ymax=prop_on+se),
width=.1,  size=0.5)+
scale_y_continuous(breaks=seq(2,16,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Proportion On (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_y_continuous(breaks=seq(2,16,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Proportion On (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
View(mtEPlot)
View(mtTPlot)
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt$trial)
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time), sd=sd(time),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error), sd=sd(error),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_y_continuous(breaks=seq(2,16,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Proportion On (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Proportion On (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = rpPlot, aes(x=trial, y=prop_on, color = Subgroup))+
geom_line() +geom_point()  +
geom_errorbar(aes(ymin=prop_on-se,ymax=prop_on+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(2,16,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Proportion On (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = mtEPlot, aes(x=trial, y=meanE, color = Subgroup))+
geom_line() +geom_point()  +
geom_errorbar(aes(ymin=meanE-se,ymax=meanE+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Errors") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
d_list <- vector(mode = "list", length = nrow(mtABCD)*2)
index <- 0
abcd_m_ids=unique(mtABCD$id)
b_list5=c()
m_list5 = c()
d_list <- vector(mode = "list", length = nrow(mtABCD)*2)
index <- 0
d_list <- vector(mode = "list", length = nrow(PL)*2)
index <- 0
abcd_m_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_m_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
print(subj)
d_m_subj <- filter(mt, id==subj)
subj_m_model <- glm(error ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list5[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
for (subj in abcd_m_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
print(subj)
d_m_subj <- filter(mt, id==PartID)
subj_m_model <- glm(error ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list5[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
for (subj in abcd_m_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
print(subj)
d_m_subj <- filter(mt, PartID==subj)
subj_m_model <- glm(error ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list5[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
d_list2 <- vector(mode = "list", length = nrow(mt)*2)
index <- 0
index <- 0
b_list7=c()
m_list7 = c()
for (subj in abcd_m_ids) { #d_export is my list of subject
print(subj)
d_m_subj <- filter(mt, PartID==subj)
subj_m_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list7[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
for (subj in abcd_m_ids) { #d_export is my list of subject
print(subj)
d_m_subj <- filter(mt, PartID==subj)
subj_m_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list7[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
for (subj in abcd_m_ids) { #d_export is my list of subject
print(subj)
d_m_subj <- filter(mt, PartID==subj)
subj_m_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list7[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
slope_m_data <- data.frame(PartID=abcd_m_ids,slope_me = m_list5, slope_mt = m_list7)
d_list2 <- vector(mode = "list", length = nrow(mt)*2)
index <- 0
b_list7=c()
m_list7 = c()
for (subj in abcd_m_ids) { #d_export is my list of subject
print(subj)
d_m_subj <- filter(mt, PartID==subj)
subj_m_model <- glm(time ~ trial, #complettion time~trial
data = d_m_subj)
b_list7[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
subj_m_model$coefficients
slope_m_data <- data.frame(PartID=abcd_m_ids,slope_me = m_list5, slope_mt = m_list7)
slope_m_data <- data.frame(PartID=abcd_m_ids,slope_me = m_list5, slope_mt = m_list7)
View(mt)
View(mt2)
#slope based on error
d_list <- vector(mode = "list", length = nrow(mt)*2)
index <- 0
abcd_m_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_m_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
print(subj)
d_m_subj <- filter(mt2, PartID==subj)
subj_m_model <- glm(error ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list5[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
#slope based on time
d_list2 <- vector(mode = "list", length = nrow(mt)*2)
index <- 0
b_list7=c()
m_list7 = c()
for (subj in abcd_m_ids) { #d_export is my list of subject
print(subj)
d_m_subj <- filter(mt2, PartID==subj)
subj_m_model <- glm(time ~ trial, #complettion time~trial
data = d_m_subj)
b_list7[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
#new data frame containing the mirror slopes
slope_m_data <- data.frame(PartID=abcd_m_ids,slope_me = m_list5, slope_mt = m_list7)
slope_m_data <- bind(PartID=abcd_m_ids,slope_me = m_list5, slope_mt = m_list7)
slope_m_data <- cbind(PartID=abcd_m_ids,slope_me = m_list5, slope_mt = m_list7)
### Slopes ###
#slope based on error
#d_list <- vector(mode = "list", length = nrow(mt)*2)
#index <- 0
abcd_m_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_m_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
print(subj)
d_m_subj <- filter(mt2, PartID==subj)
subj_m_model <- glm(error ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list5[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
#slope based on time
#d_list2 <- vector(mode = "list", length = nrow(mt)*2)
#index <- 0
b_list7=c()
m_list7 = c()
for (subj in abcd_m_ids) { #d_export is my list of subject
print(subj)
d_m_subj <- filter(mt2, PartID==subj)
subj_m_model <- glm(time ~ trial, #complettion time~trial
data = d_m_subj)
b_list7[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
for (subj in abcd_m_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
print(subj)
d_m_subj <- filter(mt2, PartID==subj)
subj_m_model <- glm(error ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list5[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
abcd_m_ids=unique(mt$PartID)
for (subj in abcd_m_ids) { #d_export is my list of subject
# index <- index + 1
print(subj)
d_m_subj <- filter(mt2, PartID==subj)
subj_m_model <- glm(error ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list5[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
abcd_m_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_m_ids) { #d_export is my list of subject
# index <- index + 1
print(subj)
d_m_subj <- filter(mt2, PartID==subj)
subj_m_model <- glm(error ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list5[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
mt2
names(mt2)
for (subj in abcd_m_ids) { #d_export is my list of subject
# index <- index + 1
print(subj)
d_m_subj <- filter(mt2, PartID==subj)
subj_m_model <- lm(error ~ trial, #complettion time(On/Off) ~trial
data = d_m_subj)
b_list5[subj] <- as.numeric(subj_m_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_m_model$coefficients[2]) # coefficient slope
}
#
# Ola Ozernov-Palchik
#
# Updated-June 11 2020
#
# MIT ABCD Procedural Learning Study
#
#import packages
Packages <- c("dplyr", "stats", "psych", "ggplot2", "lme4",
"gridExtra", "dplyr","caret","tidyverse", "ggplot2",
"plyr","lmerTest","ggpubr","nlme"
)
lapply(Packages, library, character.only = TRUE)
####Organizational ####
#set subject directory
#setwd("~/Dropbox (MIT)/learning_analysis")
setwd("~/Dropbox (MIT)/GitHub/procedural-learning")
#import pocedural.csv file
d <- read.csv('procedural_data072320.csv',stringsAsFactors = FALSE,skipNul = TRUE,
blank.lines.skip = TRUE)
groups<-read.csv("abcd_group.csv")
names(groups)[names(groups)=="ID"] <- "PartID"
names(d)[names(d)=="abcd_id"] <- "PartID"
d<-merge(d,groups,'PartID')
SL=read.csv("SL_102818.csv")
#Rename variables and organize
#exclude ineligible participants
d<-d%>%filter(d$PartID!='ABCD_1718')
d<-d%>%filter(d$PartID!='ABCD_1728')
d<-d%>%filter(d$Subgroup=="TYP"| d$Subgroup=="DD")
#sample sizes
local({
.Table <- xtabs(~Subgroup, data=d)
cat("\nFrequency table:\n")
print(.Table)
})
#create data frames for task
PL<-d[c(1,188,3:4,54:70,71:80)]
####Rotary Pursuit####
###Format###
rp <- NULL
rp <- data.frame('PartID'= character(),'Subgroup' = character(),'plType' = character(),'trial' = double(),
'On' = double(),'Off' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,10] == ""){ #if null go to next line
next()
}
for(k in 6:21){
on <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
off <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
Subgroup <- PL[i,2]
if (nrow(rp) == 0) {
rp[1,] <- c(PL[i,1],as.character(PL[i,2]),'rp',k-5,on,off)    }
else {
rp[nrow(rp) + 1,] <- c(PL[i,1],as.character(PL[i,2]),'rp',k-5,on,off)
}
}
}
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,22] == ""){ #if null go to next line
next()
}
for(k in 22:31){
print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.factor(mt$trial)
mt2<-na.omit(mt)
m3<-nlme::lme(time~Subgroup*trial,random=~1|PartID,
data=mt2)
anova(m3)
m4<-nlme::lme(error~Subgroup*trial,random=~1|PartID,
data=mt2)
anova(m4)
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time), sd=sd(time),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error), sd=sd(error),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = mtEPlot, aes(x=trial, y=meanE, color = Subgroup))+
geom_line() +geom_point()  +
geom_errorbar(aes(ymin=meanE-se,ymax=meanE+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Errors") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
