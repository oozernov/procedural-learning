m3<-lm(time~time_1+Subgroup*trial.x,
data=mt2)
summary(m3)
str(mt2)
View(mt2)
mt2<-mt #place holder while deciding on outliers
mt3<-mt2%>%filter(trial!=1)
m3<-lm(time~Subgroup*trial.x,
data=mt3)
summary(m3)
mt3<-mt2%>%filter(trial!=1)
m3<-lm(time~Subgroup*trial,
data=mt3)
summary(m3)
#extract trial 1
mt_1<-mt2%>%filter(trial==1) %>%select(PartID,trial,error,time)
names(mt_1)[names(mt_1)=="time"] <- "time_1"
names(mt_1)[names(mt_1)=="error"] <- "error_1"
mt2<-merge(mt_1,mt2,"PartID")
#and run the model controlling for it
m3<-lm(time~time_1+Subgroup*trial.x,
data=mt3)
mt2<-mt #place holder while deciding on outliers
mt_1<-mt2%>%filter(trial==1) %>%select(PartID,trial,error,time)
names(mt_1)[names(mt_1)=="time"] <- "time_1"
names(mt_1)[names(mt_1)=="error"] <- "error_1"
mt2<-merge(mt_1,mt2,"PartID")
m3<-lm(time~time_1+Subgroup*trial.x,
data=mt3)
mt2<-merge(mt_1,mt2,"PartID")
names(mt2)
mt2<-mt #place holder while deciding on outliers
mt_1<-mt2%>%filter(trial==1) %>%select(PartID,trial,error,time)
names(mt_1)[names(mt_1)=="time"] <- "time_1"
names(mt_1)[names(mt_1)=="error"] <- "error_1"
mt2<-merge(mt_1,mt2,"PartID")
m3<-lm(time~time_1+Subgroup*trial.x,
data=mt3)
summary(m3) #t
m3<-lm(time~time_1+Subgroup*trial.x,
data=mt2)
summary(m3)
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time,na.rm = T), sd=sd(time,na.rm = T),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error,na.rm = T), sd=sd(error,na.rm = T),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,22] == ""){ #if null go to next line
next()
}
for(k in 22:31){
print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.numeric(mt$trial)
mt2<-mt1
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time,na.rm = T), sd=sd(time,na.rm = T),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error,na.rm = T), sd=sd(error,na.rm = T),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
mt2<-mt2%>%filter(trial==1) %>%select(PartID,trial,error,time)
names(mt2)
mt2<-mt1
mt2<-mt
mt2<-mt2%>%filter(trial==1) %>%select(PartID,trial,error,time)
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time,na.rm = T), sd=sd(time,na.rm = T),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error,na.rm = T), sd=sd(error,na.rm = T),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
mt2<-mt2%>%filter(trial==1) %>%select(PartID,trial,error,time)
unique(mt$trial)
mt2<-mt2%>%filter(trial!=1) %>%select(PartID,trial,error,time)
mt2<-mt
mt2<-mt2%>%filter(trial!=1)
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time,na.rm = T), sd=sd(time,na.rm = T),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error,na.rm = T), sd=sd(error,na.rm = T),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
# Clearn and organize data
#import packages
Packages <- c("dplyr", "stats", "psych", "ggplot2", "lme4",
"gridExtra", "dplyr","caret","tidyverse", "ggplot2",
"plyr","lmerTest","ggpubr","nlme","emmeans"
)
lapply(Packages, library, character.only = TRUE)
source("corstars_function.R")
####Organizational ####
#set subject directory
#setwd("~/Dropbox (MIT)/learning_analysis")
setwd("~/Dropbox (MIT)/Github/procedural-learning")
#import pocedural.csv file
d <- read.csv('procedural_data072320.csv',stringsAsFactors = FALSE,skipNul = TRUE,
blank.lines.skip = TRUE)
groups<-read.csv("abcd_group.csv")
names(groups)[names(groups)=="ID"] <- "PartID"
names(d)[names(d)=="abcd_id"] <- "PartID"
d<-merge(d,groups,'PartID')
SL=read.csv("sl_analysis/all_sl_wide.csv")
#Rename variables and organize
#exclude ineligible participants
d<-d%>%filter(d$PartID!='ABCD_1718')
d<-d%>%filter(d$PartID!='ABCD_1728')
d<-d%>%filter(d$Subgroup=="TYP"| d$Subgroup=="DD")
local({
.Table <- xtabs(~Subgroup, data=d)
cat("\nFrequency table:\n")
print(.Table)
})
## Extract and organize tasks
PL<-d[c(1,188,3:4,54:70,71:80)]
rp <- NULL
rp <- data.frame('PartID'= character(),'Subgroup' = character(),'plType' = character(),'trial' = double(),
'On' = double(),'Off' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,10] == ""){ #if null go to next line
next()
}
for(k in 6:21){
on <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
off <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
Subgroup <- PL[i,2]
if (nrow(rp) == 0) {
rp[1,] <- c(PL[i,1],as.character(PL[i,2]),'rp',k-5,on,off)    }
else {
rp[nrow(rp) + 1,] <- c(PL[i,1],as.character(PL[i,2]),'rp',k-5,on,off)
}
}
}
rp$On <- as.numeric(rp$On)
rp$Off <- as.numeric(rp$Off)
rp$trial <- as.numeric(rp$trial)
rp2<-rp%>%group_by(PartID,Subgroup,trial)%>%
dplyr::mutate(prop_on=On/(On+Off))
plot(rp2$prop_on~rp2$trial)
# left_join(d)
# Check # of trials per each subject
data_tmp4check <- aggregate(prop_on ~ PartID * Subgroup, FUN=NROW, data = rp2 )
unique(data_tmp4check[data_tmp4check$trial != 16,])
#View(data_tmp4check)
length(unique(d$PartID))
data_tmp4check[data_tmp4check$trial !=16,1]
hist(rp2$prop_on)
t.test(d$rotarypursuit_0_2~d$Subgroup)
rp2$PartID = as.factor(rp2$PartID)
rp2$Subgroup = as.factor(rp2$Subgroup)
m1<-lm(prop_on~Subgroup*trial,
data=rp2)
summary(m1)
rp2_age_gender_iq = merge(rp2,d[,c(1,3,4,6)],all.x=TRUE)
m2<-lm(prop_on~Subgroup*trial+background_age+background_sex+kbit_ss,
data=rp2_age_gender_iq) #after controlling for age, sex, and iq, the results remain the same
summary(m2)
lsmeans(m1, list(pairwise ~ Subgroup|trial), adjust = "tukey") #You can use lsmeans to probe interaction between continous and factor
lmerrp1 <- lmer(prop_on~Subgroup*trial + (1|PartID),data=rp2)
lmerrp2 <- lmer(prop_on~Subgroup*trial + (1+trial|PartID),data=rp2)
anova(lmerrp1,lmerrp2)
summary(lmerrp2)
#controlling for age, sex, and iq
lmerrp1 <- lmer(prop_on~Subgroup*trial +background_age+background_sex+kbit_ss + (1|PartID),data=rp2_age_gender_iq)
lmerrp2 <- lmer(prop_on~Subgroup*trial +background_age+background_sex+kbit_ss + (1+trial|PartID),data=rp2_age_gender_iq)
anova(lmerrp1,lmerrp2)
summary(lmerrp2)
summary(lmerrp2)
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(rp2$PartID)
b_list=c()
m_list = c()
for (subj in abcd_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
#print(subj)
d_subj <- filter(rp2, PartID==subj)
subj_model <- lm(formula=On ~ trial, #complettion time(On/Off) ~trial
data = d_subj)
b_list[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
#Off Slopes
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(rp$PartID)
b_list2=c()
m_list2 = c()
for (subj in abcd_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
#print(subj)
d_subj <- filter(rp2, PartID==subj)
subj_model <- lm(formula=Off ~ poly(trial,3,raw=TRUE), #complettion time(On/Off) ~trial
data = d_subj)
b_list2[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list2[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
#PropOn Slopes
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(rp$PartID)
b_list4=c()
m_list4 = c()
for (subj in abcd_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
#print(subj)
d_subj <- filter(rp2, PartID==subj)
subj_model <- lm(formula=prop_on ~ trial, #complettion time(On/Off) ~trial
data = d_subj)
b_list4[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list4[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
#Create a new Data Frame containing the slopes
rp_data <- data.frame(PartID=abcd_ids,slopeOn = m_list, slopeOff = m_list2, slopeProp_On = m_list4)
d_rp<-merge(d,rp_data) # the two groups are significantly different in IQ (p = 0.04)
hist(d_rp$slopeProp_On)
rp2$trial<-as.integer(rp2$trial)
rpPlot<-dplyr::summarise(group_by(rp2,Subgroup,trial), n = n(),
mean=mean(prop_on,na.rm = T), sd=sd(On/(On+Off),na.rm = T),se = sd/sqrt(n))
ggplot(data = rpPlot, aes(x=trial, y=mean, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=mean-se,ymax=mean+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(2,16,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Proportion On (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
t.test(d$rotarypursuit_0_2~d$Subgroup)
ggplot(rp2, aes(trial, prop_on, color=Subgroup))+
stat_summary(fun.data=mean_se, geom="pointrange")+
stat_summary(aes(y=fitted_prop_on),fun.y=mean, geom="line")+
scale_color_manual(values=c('red','blue'))+
scale_x_continuous(breaks=seq(2,16,1))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Proportion On (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
m2<-lm(slopeProp_On~kbit_ss+Subgroup, data=d_rp)
anova(m2)
lsmeans(m2, list(pairwise ~ Subgroup), adjust = "tukey")
plot_rp_slope<-d_rp%>%dplyr::select('PartID',"Subgroup","slopeProp_On")
plot_rp_slope<-na.omit(plot_rp_slope)
rp_slope = plot_rp_slope %>%
dplyr::group_by(PartID, Subgroup) %>%
dplyr::summarise(mean = mean(slopeProp_On, na.rm = T))
multi.group3 <-
rp_slope %>%
dabestr::dabest(Subgroup,mean,
idx = list(c("TYP",'DD')),
paired = FALSE)
plot(multi.group3, palette=c("blue","red"),rawplot.ylabel = "RP Prop On Slope")
## Extract and organize
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,22] == ""){ #if null go to next line
next()
}
for(k in 22:31){
print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.numeric(mt$trial)
## QC
#Should we exclude outliers?
# Check # of trials per each subject
data_tmp4check <- aggregate(error ~ PartID * Subgroup, FUN=NROW, data = mt )
unique(data_tmp4check[data_tmp4check$trial != 10,])
#View(data_tmp4check)
length(unique(d$PartID))
data_tmp4check[data_tmp4check$trial !=10,1]
# Outliers
summary(mt)
mt2<-mt #place holder while deciding on outliers
#mt2<-mt2%>%filter(error<95) #3sd above mean
#length(unique(mt$PartID))
length(unique(mt2$PartID))
histogram(mt2$error)
#mt2<-mt2%>%filter(time<73.51465)
histogram(mt2$time)
mt2$Subgroup<-as.factor(mt2$Subgroup)
#extract trial 1
mt_1<-mt2%>%filter(trial==1) %>%select(PartID,trial,error,time)
names(mt_1)[names(mt_1)=="time"] <- "time_1"
names(mt_1)[names(mt_1)=="error"] <- "error_1"
mt2<-merge(mt_1,mt2,"PartID")
#and run the model controlling for it
m3<-lm(time~time_1+Subgroup*trial.x,
data=mt2)
summary(m3) #trial is significant
m4<-lm(error~Subgroup*trial,
data=mt2)
mt_1<-mt2%>%filter(trial==1|trial==2) %>%group_by(PartID)%>%
summarize(t12=mean(time))
summary(mt)
mt2<-mt #place holder while deciding on outliers
#mt2<-mt2%>%filter(error<95) #3sd above mean
#length(unique(mt$PartID))
length(unique(mt2$PartID))
histogram(mt2$error)
#mt2<-mt2%>%filter(time<73.51465)
histogram(mt2$time)
mt2$Subgroup<-as.factor(mt2$Subgroup)
mt_1<-mt2%>%filter(trial==1|trial==2) %>%group_by(PartID)%>%
summarize(t12=mean(time))
mt2$time
mt_1<-mt2%>%
dplyr::filter(trial==1|trial==2)%>%
group_by(PartID)%>%
summarize(t12=mean(time,na.omit=TRUE))
mt_1<-mt2%>%
dplyr::filter(trial==1|trial==2)%>%
dplyr::group_by(PartID)%>%
summarize(t12=mean(time,na.omit=TRUE))
mt_1<-mt2%>%
dplyr::filter(trial==1)%>%
dplyr::group_by(PartID)%>%
summarize(t12=mean(time,na.omit=TRUE))
mt2$PartID
str(PartID)
str(mt2$PartID)
mt2$PartID<-as.factor(mt2$PartID)
#extract trial 1
mt_1<-mt2%>%
dplyr::filter(trial==1|trial==2)%>%
dplyr::group_by(PartID)%>%
summarize(t12=mean(time,na.omit=TRUE))
mt_1<-mt2%>%
dplyr::filter(trial==1|trial==2)%>%
dplyr::group_by(PartID)%>%
dplyr::summarize(t12=mean(time,na.omit=TRUE))
View(mt_1)
mt_1<-mt2%>%
dplyr::filter(trial==1|trial==2)%>%
dplyr::group_by(PartID)%>%
dplyr::summarize(t12=mean(time,na.omit=TRUE))
me_1<-mt2%>%
dplyr::filter(trial==1|trial==2)%>%
dplyr::group_by(PartID)%>%
dplyr::summarize(e12=mean(error,na.omit=TRUE))
View(me_1)
mt2<-merge(mt_1,mt2,"PartID")
mt2<-merge(mt_1,mt2,"PartID")
mt2<-merge(me_1,mt2,"PartID")
m3<-lm(time~e12+t12+Subgroup*trial,
data=mt2)
names(mt2)
mt2<mt
mt2<-mt
mt_1<-mt2%>%
dplyr::filter(trial==1|trial==2)%>%
dplyr::group_by(PartID)%>%
dplyr::summarize(t12=mean(time,na.omit=TRUE))
me_1<-mt2%>%
dplyr::filter(trial==1|trial==2)%>%
dplyr::group_by(PartID)%>%
dplyr::summarize(e12=mean(error,na.omit=TRUE))
mt2<-merge(mt_1,mt2,"PartID")
mt2<-merge(me_1,mt2,"PartID")
m3<-lm(time~e12+t12+Subgroup*trial,
data=mt2)
summary(m3) #
m3<-lm(time~t12+Subgroup*trial,
data=mt2)
summary(m3) #trial is significant
m4<-lm(error~e12+Subgroup*trial,
data=mt2)
summary(m4) #trial
mt2<-mt
mt2<-mt2%>%filter(trial!=1)
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time,na.rm = T), sd=sd(time,na.rm = T),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error,na.rm = T), sd=sd(error,na.rm = T),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
ggplot(data = mtEPlot, aes(x=trial, y=meanE, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanE-se,ymax=meanE+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Errors") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
