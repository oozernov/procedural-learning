d<-d%>%filter(d$PartID!='ABCD_1728')
d<-d%>%filter(d$Subgroup=="TYP"| d$Subgroup=="DD")
#sample sizes
local({
.Table <- xtabs(~Subgroup, data=d)
cat("\nFrequency table:\n")
print(.Table)
})
PL<-d[c(1,188,3:4,54:70,71:80)]
rp <- NULL
rp <- data.frame('PartID'= character(),'Subgroup' = character(),'plType' = character(),'trial' = double(),
'On' = double(),'Off' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,10] == ""){ #if null go to next line
next()
}
for(k in 6:21){
on <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
off <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
Subgroup <- PL[i,2]
if (nrow(rp) == 0) {
rp[1,] <- c(PL[i,1],as.character(PL[i,2]),'rp',k-5,on,off)    }
else {
rp[nrow(rp) + 1,] <- c(PL[i,1],as.character(PL[i,2]),'rp',k-5,on,off)
}
}
}
rp$On <- as.numeric(rp$On)
rp$Off <- as.numeric(rp$Off)
rp$trial <- as.numeric(rp$trial)
rp2<-rp%>%dplyr::group_by(PartID,Subgroup,trial)%>%
mutate(prop_on=On/(On+Off))
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(rp2$PartID)
b_list=c()
m_list = c()
for (subj in abcd_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
print(subj)
d_subj <- filter(rp2, PartID==subj)
subj_model <- glm(On ~ trial, #complettion time(On/Off) ~trial
data = d_subj)
b_list[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
#Off Slopes
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(rp$PartID)
b_list2=c()
m_list2 = c()
for (subj in abcd_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
print(subj)
d_subj <- filter(rp2, PartID==subj)
subj_model <- glm(Off ~ trial,
data = d_subj)
b_list2[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list2[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
#PropOn Slopes
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(rp$PartID)
b_list4=c()
m_list4 = c()
for (subj in abcd_ids) { #d_export is my list of subject
#for (a in c("d", "b"))
# index <- index + 1
print(subj)
d_subj <- filter(rp2, PartID==subj)
subj_model <- glm(prop_on ~ trial, #complettion time(On/Off) ~trial
data = d_subj)
b_list4[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list4[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
#Creat a new Data Frame containing the slopes
rp_data <- data.frame(PartID=abcd_ids,slopeOn = m_list, slopeOff = m_list2, slopeProp_On = m_list4)
rp_data$slopeProp_On_t<-as.numeric(abs(rp_data$slopeProp_On))
rp_data$slopeProp_On_t<-log10(rp_data$slopeProp_On+1) #transform slope
d_rp<-merge(d,rp_data)
m2<-lm(slopeProp_On_t~background_age+background_sex+kbit_ss+Subgroup, data=d_rp)
anova(m2)
rp2$trial<-as.integer(rp2$trial)
rpPlot<-dplyr::summarise(group_by(rp2,Subgroup,trial), n = n(),
mean=mean(prop_on,na.rm = T), sd=sd(On/(On+Off),na.rm = T),se = sd/sqrt(n))
ggplot(data = rpPlot, aes(x=trial, y=mean, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=mean-se,ymax=mean+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(2,16,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Proportion On (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
plot_rp_slope<-d2%>%dplyr::select('PartID',"Subgroup","slopeProp_On_t")
rp_slope = plot_rp_slope %>%
dplyr::group_by(PartID, Subgroup) %>%
dplyr::summarise(mean = mean(slopeProp_On_t, na.rm = T))
color_easy = c("red", "blue")[rp_slope$Subgroup]
multi_2group.mean_diff.plot(custom_palette=my_color_palette);
plot_rp_slope<-d2%>%dplyr::select('PartID',"Subgroup","slopeProp_On_t")
rp_slope = plot_rp_slope %>%
dplyr::group_by(PartID, Subgroup) %>%
dplyr::summarise(mean = mean(slopeProp_On_t, na.rm = T))
color_easy = c("red", "blue")[rp_slope$Subgroup]
multi.group3 <-
rp_slope %>%
dabest(Subgroup,mean,
idx = list(c("TYP",'DD')),
paired = FALSE
)
plot_rp_slope<-d2%>%dplyr::select('PartID',"Subgroup","slopeProp_On_t")
rp_slope = plot_rp_slope %>%
dplyr::group_by(PartID, Subgroup) %>%
dplyr::summarise(mean = mean(slopeProp_On_t, na.rm = T))
multi.group3 <-
rp_slope %>%
dabest(Subgroup,mean,
idx = list(c("TYP",'DD')),
paired = FALSE
)
#import packages
Packages <- c("dplyr", "stats", "psych", "ggplot2", "lme4",
"gridExtra", "dplyr","caret","tidyverse", "ggplot2",
"plyr","lmerTest","ggpubr","nlme","emmeans"
)
lapply(Packages, library, character.only = TRUE)
plot_rp_slope<-d2%>%dplyr::select('PartID',"Subgroup","slopeProp_On_t")
rp_slope = plot_rp_slope %>%
dplyr::group_by(PartID, Subgroup) %>%
dplyr::summarise(mean = mean(slopeProp_On_t, na.rm = T))
multi.group3 <-
rp_slope %>%
dabest(Subgroup,mean,
idx = list(c("TYP",'DD')),
paired = FALSE
)
multi.group3 <-
rp_slope %>%
dabest(Subgroup,mean,
idx = list(c("TYP",'DD')),
paired = FALSE)
plot_rp_slope<-d2%>%dplyr::select('PartID',"Subgroup","slopeProp_On_t")
rp_slope = plot_rp_slope %>%
dplyr::group_by(PartID, Subgroup) %>%
dplyr::summarise(mean = mean(slopeProp_On_t, na.rm = T))
multi.group3 <-
rp_slope %>%
dabestr::dabest(Subgroup,mean,
idx = list(c("TYP",'DD')),
paired = FALSE)
plot(multi.group3, palette=c("blue","red"),rawplot.ylabel = "RP Prop On Slope")
m2<-lm(slopeProp_On_t~background_age+background_sex+Subgroup, data=d_rp)
anova(m2)
m2<-lm(slopeProp_On_t~Subgroup, data=d_rp)
anova(m2)
t.test(d_rp$slopeProp_On_t~d_rp$Subgroup)
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,22] == ""){ #if null go to next line
next()
}
for(k in 22:31){
print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.factor(mt$trial)
mt2<-na.omit(mt)
m3<-lm(time~Subgroup*trial,
data=mt2)
anova(m3) #trial is only one sig
m4<-lm(error~Subgroup*trial,
data=mt2)
anova(m4)
mt2$time <- as.numeric(mt2$time)
mt2$error <- as.numeric(mt2$error)
mt2$trial <- as.numeric(mt2$trial)
mtTPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanT=mean(time,na.rm = T), sd=sd(time,na.rm = T),se = sd/sqrt(n))
mtEPlot<-dplyr::summarise(group_by(mt2,Subgroup,trial), n = n(),
meanE=mean(error,na.rm = T), sd=sd(error,na.rm = T),se = sd/sqrt(n))
ggplot(data = mtTPlot, aes(x=trial, y=meanT, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=meanT-se,ymax=meanT+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(0,10,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Completion Time (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
rp2$trial<-as.integer(rp2$trial)
rpPlot<-dplyr::summarise(group_by(rp2,Subgroup,trial), n = n(),
mean=mean(prop_on,na.rm = T), sd=sd(On/(On+Off),na.rm = T),se = sd/sqrt(n))
ggplot(data = rpPlot, aes(x=trial, y=mean, color = Subgroup))+
geom_line() +geom_point()  +
scale_color_manual(values=c('red','blue'))+
geom_errorbar(aes(ymin=mean-se,ymax=mean+se),
width=.1,  size=0.5)+
scale_x_continuous(breaks=seq(2,16,1))+
#scale_y_continuous(limits = c(0.2, 0.5))+
theme(
axis.title = element_text(family = "Trebuchet MS", size = 20),
legend.key.size = unit(1, "cm"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15))  +
labs(x = "Trials", y = "Proportion On (secs)") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
theme(axis.line = element_line(arrow = arrow(angle = 15, length = unit(.15,"inches"),type = "closed")))
mt <- NULL
mt <- data.frame('PartID'= character(),'Subgroup' = character(),'Type' = character(),'trial' = double(),
'time' = double(),'error' = double(),stringsAsFactors=FALSE)
for (i in 1:nrow(PL)) {
if (PL[i,22] == ""){ #if null go to next line
next()
}
for(k in 22:31){
print(paste(k,PL[i,k]))
time <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][1]))
error <- as.numeric(trimws(strsplit(PL[i,k],';')[[1]][2]))
if (nrow(mt) == 0) {
mt[1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
else {
mt[nrow(mt) + 1,] <- c(PL[i,1],PL[i,2],'mt',k-21,time,error)
}
}
}
mt$time <- as.numeric(mt$time)
mt$error <- as.numeric(mt$error)
mt$trial <- as.factor(mt$trial)
mt2<-na.omit(mt)
m3<-lm(time~Subgroup*trial,
data=mt2)
anova(m3) #trial is only one sig
m4<-lm(error~Subgroup*trial,
data=mt2)
anova(m4)
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(error ~ trial, #errors
data = d_subj)
b_list5[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
b_list7=c()
m_list7 = c()
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- dplyr::filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(error ~ trial, #errors
data = d_subj)
b_list5[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(error ~ trial, #errors
data = d_subj)
b_list5[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
b_list7=c()
m_list7 = c()
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
b_list7=c()
m_list7 = c()
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(error ~ trial, #errors
data = d_subj)
b_list5[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
b_list7=c()
m_list7 = c()
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj)
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
View(d_subj)
mt2$time <- as.numeric(mt2$time)
mt2$time
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt2, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
View(mt)
anova(lm(time~trial,data=mt))
anova(lm(time~trial,data=subject))
anova(lm(time~trial,data=d_subj))
str(d_subj)
str(mt)
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- dplyr::filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_subj <- dplyr::filter(mt, PartID==subj)
str(d_subj)
str(mt)
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- dplyr::filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list5=c()
m_list5 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(error ~ trial, #errors
data = d_subj)
b_list5[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list5[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
b_list7=c()
m_list7 = c()
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- filter(mt, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
mt2<-na.omit(mt)
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- dplyr::filter(mt2, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
d_glm_fit_list <- vector(mode = "list", length = nrow(rp)*2)
index <- 0
abcd_ids=unique(mt$PartID)
b_list7=c()
m_list7 = c()
for (subj in abcd_ids) { #d_export is my list of subject
print(subj)
d_subj <- dplyr::filter(mt2, PartID==subj)
subj_model <- glm(time ~ trial, #complettion time(On/Off) ~trial
data = d_subj,na.action = 'na.omit')
b_list7[subj] <- as.numeric(subj_model$coefficients[1]) # coefficient intercept
m_list7[subj] <- as.numeric(subj_model$coefficients[2]) # coefficient slope
}
